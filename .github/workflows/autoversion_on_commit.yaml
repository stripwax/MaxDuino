name: Auto-Version On Commit

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master", "auto_version_numbers_testtest" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      contents: write
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.

      - name: create a custom version using run number offset by 1000 (run_number + 1000)
        run: |
          echo "VERSION_NUMBER_WITH_OFFSET=$((1000+GITHUB_RUN_NUMBER))" >> $GITHUB_ENV
          echo "Run $VERSION_NUMBER_WITH_OFFSET"

      - name: extract current major/minor from version.h
        run: |
          echo "VERSION_MAJOR=`sed 's/.*_VERSION[ ]\+\([0-9]\+\)\..\+/\1/' < version.h`" >> $GITHUB_ENV
          echo "VERSION_MINOR=`sed 's/.*_VERSION[ ]\+\([0-9]\+\)\.\([0-9]\+\)\..\+/\2/' < version.h`" >> $GITHUB_ENV
          echo "MAJOR = $VERSION_MAJOR , MINOR = $VERSION_MINOR"

      - name: get HEAD SHA
        run: |
          echo "VERSION_HEAD_SHA=`echo $GITHUB_SHA | sed 's/^\(......\).\+/\1/'`" >> $GITHUB_ENV
          echo "HEAD SHA is $VERSION_HEAD_SHA"
          
      - name: Modify version.h
        uses: jaywcjlove/github-action-modify-file-content@main
        with:
          path: version.h
          body: '#define _VERSION ${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.VERSION_NUMBER_WITH_OFFSET }}.${{ env.VERSION_HEAD_SHA }}'
          overwrite: 'true'
          token: ${{ secrets.GITHUB_TOKEN }}
